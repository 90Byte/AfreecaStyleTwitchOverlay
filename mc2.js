// Generated by IcedCoffeeScript 108.0.9
(function() {
  var defaults, getOption, lastMessageTime, tmi, urlVars,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  defaults = {
    channel: 'hatsuney',
    subs: [],
    ttsCommand: null
  };

  lastMessageTime = 0;

  urlVars = {};

  window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, (function(_this) {
    return function(m, key, value) {
      return urlVars[key] = value;
    };
  })(this));

  getOption = function(optionName) {
    if (urlVars[optionName] != null) {
      return urlVars[optionName];
    } else if (defaults[optionName] != null) {
      return defaults[optionName];
    } else {
      return null;
    }
  };

  tmi = new irc.client({
    options: {
      debug: true
    },
    channels: [getOption('channel')]
  });

  tmi.on('connected', (function(_this) {
    return function() {
      tmi.emit('message', {}, {
        username: 'Mikuchat'
      }, 'Connected!', null);
      if (urlVars.subs != null) {
        return urlVars.subs = urlVars.subs.split(',');
      }
    };
  })(this));

  tmi.on('message', (function(_this) {
    return function(channel, user, message, self) {
      setTimeout(function() {
        var colors, subUser, _ref;
        subUser = (_ref = user.username, __indexOf.call(getOption('subs'), _ref) >= 0);
        colors = {};
        if (subUser) {
          console.log(user);
          if (user.color != null) {
            colors = hexToRgb(shadeBlend(0.6, user.color, '#000000'));
          } else {
            colors = hexToRgb(shadeBlend(0.6, '#ffffff', '#000000'));
          }
        }
        return $('body').append(' <span class="message ' + (subUser ? 'subscriber ' : '') + 'animation-slide-up" style="' + (subUser ? 'background-color: rgba(' + colors.r + ', ' + colors.g + ', ' + colors.b + ', ' + '0.7); border: 2px solid ' + user.color + '; ' : '') + 'border-left: 5px solid ' + user.color + ';"> <small class="pull-right time">' + moment().format('HH:mm') + '</small> ' + (subUser ? '<div class="pull-left"><img class="img-circle" src="http://mikuia.tv/img/avatars/' + user.username + '.jpg" width="28" height="28" /></div> ' : '') + ' <b class="pull-left" style="padding-left: 3px;"> ' + (subUser ? user['display-name'] : user.username) + '</b> <br /> ' + message.replace(/(<([^>]+)>)/ig, "") + ' </span>');
      }, lastMessageTime);
      return lastMessageTime += 1500;
    };
  })(this));

  tmi.connect();

  tmi.emit('message', {}, {
    username: 'Mikuchat'
  }, 'Connecting...', null);

  setInterval((function(_this) {
    return function() {
      var nextSpeechTime;
      lastMessageTime -= 500;
      nextSpeechTime -= 500;
      if (lastMessageTime < 0) {
        lastMessageTime = 0;
      }
      if (nextSpeechTime < 0) {
        return nextSpeechTime = 0;
      }
    };
  })(this), 500);

}).call(this);
